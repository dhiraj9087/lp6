import pandas as pd
df = pd.read_csv("/content/GOOGLE Stock Data set.csv")
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
data_scaled = scaler.fit_transform(df)
X = []
y = []
time_step = 60

for i in range(time_step,len(data_scaled)):
  X.append(data_scaled[i-time_step:i,0])
  y.append(data_scaled[i,0])

import numpy as np
X = np.array(X)
y = np.array(y)
X = X.reshape(X.shape[0], X.shape[1],1)

split = int(len(X)*0.8)
X_train, X_test = X[:split], X[split:]
y_train, y_test = y[:split], y[split:]

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN, Dense
model = Sequential()
model.add(SimpleRNN(50,activation='relu', input_shape=(60,1), return_sequences = False))
model.add(Dense(1))
model.compile(optimizer = 'adam',loss = 'mse')
history = model.fit(
    X_train,
    y_train,
    epochs = 20,
    batch_size = 32,
    verbose = 1
)

predictions = model.predict(X_test)

predicted_prices = scaler.inverse_transform(predictions.reshape(-1,1))
actual_prices = scaler.inverse_transform(y_test.reshape(-1,1))

import matplotlib.pyplot as plt
plt.plot(actual_prices,label = 'actual')
plt.plot(predicted_prices,label = 'predicted')
plt.legend()
plt.title("google stock")
plt.show()
